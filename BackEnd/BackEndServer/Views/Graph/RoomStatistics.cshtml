@using BackEndServer.Models.Enums
@model BackEndServer.Models.ViewModels.SharedGraphStatistics

<h1 id="headerGraph" class="page-title center-align">Statistics for cameras monitoring <b>@Model.Room.RoomName</b></h1>

<script type="text/javascript">
google.charts.load('current', {'packages':['annotatedtimeline']});
google.charts.setOnLoadCallback(function() {
    $("#graph_name_list li a.active").click();
    if ($("#graph_name_list li a.active").attr("value") === "@PastPeriod.Custom") {
        $("#start_date").change();
    }
});

function drawChart(stats) {
    var data = new google.visualization.DataTable();

    if (stats.length === 0) {
        Materialize.toast("Couldn't reload chart because of an unexpected server error", 4000);
        return;
    }
    
    data.addColumn('datetime', stats[0][0]);
    for (j = 1; j < stats[0].length; j++) {
        data.addColumn('number', stats[0][j]);
    }
    stats.splice(0, 1);

    var maxValue = 1;
    for (let i = 0; i < stats.length; i++) {
        stats[i][0] = new Date(stats[i][0]);
        for (let j = 1; j < stats[i].length; j++) {
            stats[i][j] = +stats[i][j];
            if (maxValue < stats[i][j]) {
                //Weird trick that lets you see the maximum value on the vertical axis
                maxValue = stats[i][j] * 1.2;
            }
        }
    }

    data.addRows(stats);
    
    // Instantiate and draw the chart.
    var chart = new google.visualization.AnnotatedTimeLine(document.getElementById('timeline_chart'));
    try {
        chart.draw(data,
            {
                displayAnnotations: false,
                displayZoomButtons: false,
                fill: 1,
                allowRedraw: true,
                min: 0,
                max: maxValue
            });
    } catch (e) {
        console.log(e);
    }
}
</script>

<div class="row">
    <div class="col l8 m12">
        <ul id="graph_name_list" class="tabs">
            <li class="tab"><a class="teal-text @(Model.SelectedPeriod == PastPeriod.LastDay ? "active" : "")" value="@PastPeriod.LastDay" href="#past_day">Past Day</a></li>
            <li class="tab"><a class="teal-text @(Model.SelectedPeriod == PastPeriod.LastWeek ? "active" : "")" value="@PastPeriod.LastWeek" href="#past_week">Past Week</a></li>
            <li class="tab"><a class="teal-text @(Model.SelectedPeriod == PastPeriod.LastMonth ? "active" : "")" value="@PastPeriod.LastMonth" href="#past_month">Past Month</a></li>
            <li class="tab"><a class="teal-text @(Model.SelectedPeriod == PastPeriod.LastYear ? "active" : "")" value="@PastPeriod.LastYear" href="#past_year">Past Year</a></li>
            <li class="tab"><a class="teal-text @(Model.SelectedPeriod == PastPeriod.Custom ? "active" : "")" value="@PastPeriod.Custom" href="#past_custom">Custom</a></li>
            <div class="indicator teal" style="z-index:1"></div>
        </ul>
    </div>
    <div class="input-field col l2 m4 no-top-margin date-container hide">
        <input id="start_date" type="text" class="datepicker no-bottom-margin" value="@Model.StartDate">
        <label for="start_date" data-error="Start Date cannot be higher than End Date">Start Date</label>
    </div>
    <div class="input-field col m2 s4 no-top-margin date-container hide">
        <input id="end_date" type="text" class="datepicker no-bottom-margin" value="@Model.EndDate">
        <label for="end_date" data-error="End Date cannot be lower than Start Date">End Date</label>
    </div>
</div>

<div class="row">
    <div class="col s12">
        <div class="card">
            <div class="card-content">
                <div id="past_day" class="card-title center-align">Number of people spotted inside @Model.Room.RoomName over the past day</div>
                <div id="past_week" class="card-title center-align">Number of people spotted inside @Model.Room.RoomName over the past week</div>
                <div id="past_month" class="card-title center-align">Number of people spotted inside @Model.Room.RoomName over the past month</div>
                <div id="past_year" class="card-title center-align">Number of people spotted inside @Model.Room.RoomName over the past year</div>
                <div id="past_custom" class="card-title center-align">Number of people spotted inside @Model.Room.RoomName over a custom period</div>
                <div id="timeline_chart"></div>
                <div id="select-range-message" class="center-align hide">
                    To draw the chart, please select a valid date range using the date pickers
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function reloadGraphWithCustomDateRange() {
    var startDate = $("#start_date").val();
    var endDate = $("#end_date").val();
    var url = "GetSharedRoomCustomGraphStats?roomId=" + "@Model.Room.RoomId" + "&startDate=" + startDate + "&endDate=" + endDate;
    $.get(url, function(data) {
        $("#select-range-message").addClass("hide");
        $("#timeline_chart").removeClass("hide");
        drawChart(data.stats);
    });
};

function reloadGraph(pastPeriod) {
    var url = "GetSharedRoomGraphStats?roomId=" + "@Model.Room.RoomId" + "&pastPeriod=" + pastPeriod;
    $.get(url, function(data) {
        drawChart(data.stats);
    });
}

$("#graph_name_list li a").click(function() {
    var pastPeriod = $(this).attr("value");
    if (pastPeriod === "@PastPeriod.Custom") {
        $(".date-container").removeClass("hide");
        $("#select-range-message").removeClass("hide");
        $("#timeline_chart").addClass("hide");
    } else {
        $(".date-container").addClass("hide");
        $("#select-range-message").addClass("hide");
        $("#timeline_chart").removeClass("hide");
        $("#start_date").val("").removeClass("valid");
        $("#end_date").val("").removeClass("valid");
        reloadGraph(pastPeriod);
    }
});

function validateStartEndDate() {
    var startElem = $('#start_date');
    var endElem = $('#end_date');

    if (!startElem.val() || !endElem.val()) {
        return false;
    }

    var startDate = moment(startElem.val(), "DD MMMM, YYYY");
    var endDate = moment(endElem.val(), "DD MMMM, YYYY");
    if ((startDate - endDate) > 0) {
        //Needed because label needs to be right after to show validation text
        $("label[for='" + startElem.attr('id') + "']").insertAfter(startElem);
        startElem.removeClass("valid");
        startElem.addClass("invalid");
        startElem.prop("aria-invalid", "true");
        //Needed because label needs to be right after to show validation text
        $("label[for='" + endElem.attr('id') + "']").insertAfter(endElem);
        endElem.removeClass("valid");
        endElem.addClass("invalid");
        endElem.prop("aria-invalid", "true");
        return false;
    }

    return true;
}

$("#start_date,#end_date").change(function() {
    if (validateStartEndDate()) {
        $('#start_date').removeClass("invalid");
        $('#end_date').removeClass("invalid");
        $('#start_date').addClass("valid");
        $('#end_date').addClass("valid");
    } else {
        return;
    }
    
    if ($("#graph_name_list li a.active").attr("value") === "@PastPeriod.Custom") {
        reloadGraphWithCustomDateRange();
    }
});
</script>