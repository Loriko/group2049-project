@using Castle.Core.Internal
@model BackEndServer.Models.ViewModels.UserSettings
@{
    ViewBag.Title = "Project Jetson - User Settings";
}

<h1 id="headerModifySettings" class="page-title center-align">Please modify your personal settings as you will</h1>

<div class="row">
    <form id="user_settings_modification_form" class="col s12" method="post" asp-controller="User" asp-action="ModifyUserSettings" enctype="multipart/form-data">
        <input type="hidden" name="UserId" value="@Model.UserId">
        <div class="row">
            <div class="input-field col s6">
                <input id="first_name" name="FirstName" type="text" class="validate" value="@Model.FirstName">
                <label for="first_name">First Name</label>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s6">
                <input id="last_name" name="LastName" type="text" class="validate" value="@Model.LastName">
                <label for="last_name">Last Name</label>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s6">
                <input id="email_address" name="EmailAddress" type="text" class="validate" value="@Model.EmailAddress">
                <label for="email_address" data-error="You must enter an email address no other user has entered">Email Address</label>
            </div>
        </div>
        
        <!-- Submit Button -->
        <div class="row">
            <div class="s12">
                <button class="btn waves-effect waves-light right-align" type="submit" name="action">
                    Submit
                    <i class="material-icons right">send</i>
                </button>
            </div>
        </div>

        <div class="divider standard-bottom-margin"></div>
        
        <!-- Change Password -->
        <div class="row">
            <div class="s12">
                <a class="btn waves-effect waves-light right-align" name="action" href="/User/PasswordChange">
                    Change Password
                    <i class="material-icons right">lock</i>
                </a>
            </div>
        </div>
        
    </form>
</div>

<script>
    $("#email_address").focusout(function() {
        validateEmail();
    });

    function validateEmail() {
        
        @if (Model.EmailAddress.IsNullOrEmpty() == false)
        {
        <text>
            if ($("#email_address").val() === "@Model.EmailAddress") {
                return true;
            }
        </text>
        }
        
        if ($("#email_address").val()) {
            var url = "ValidateEmail";

            $.ajax({
                type: "POST",
                url: url,
                data: {
                    "emailAddress": $("#email_address").val()
                },
                success: function(data) {
                    $("#email_address").addClass("validated");
                    if (data === true) {
                        $("#email_address").addClass("valid");
                        $("#email_address").removeClass("invalid");
                    } else {
                        $("#email_address").addClass("invalid");
                        $("#email_address").removeClass("valid");
                    }
                }
            });
        }
    }
    
    function handleUserModificationFormSubmission(response) {
        if (response === true) {
            Materialize.toast("Personal settings successfully modified!", 4000);
        } else {
            Materialize.toast("Couldn't modify personal settings.", 4000);
        }
    }

    function checkEmailValidity() {
        var email = $("#email_address");
        //check if email doesn't exist
        if (email.val() && (email.hasClass("invalid") || email.hasClass("validated") === false)) {
            return false;
        }
        return true;
    }
    
    $("#user_settings_modification_form").submit(function (e) {

        if (!checkEmailValidity()) {
            return false;
        }
        
        var form = $(this);
        var url = form.attr('action');

        $.ajax({
            type: "POST",
            url: url,
            data: form.serialize(), // serializes the form's elements.
            success: function (data) {
                handleUserModificationFormSubmission(data);
            }
        });

        e.preventDefault(); // avoid to execute the actual submit of the form.
    });
</script>