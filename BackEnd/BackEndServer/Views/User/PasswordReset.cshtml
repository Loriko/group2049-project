@model BackEndServer.Models.ViewModels.PasswordReset
@{
    ViewBag.Title = "Project Jetson - Password Change";
}

<h1 class="page-title center-align">Reset your password</h1>

<div class="row">
    <form id="password_change_form" class="col s12" method="post" asp-controller="User" asp-action="InitializePasswordReset" enctype="multipart/form-data">
        <input type="hidden" name="token" value="@Model.Token">
        <div class="row">
            <div class="input-field col s6">
                <input id="password" name="Password" type="password" class="validate" required>
                <label for="password">New Password</label>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s6">
                <input id="password2" name="RetypePassword" type="password" class="validate" required>
                <label for="password2">Re-type New Password</label>
            </div>
        </div>
        <!-- Submit Button -->
        <div class="row">
            <div class="s12">
                <button class="btn waves-effect waves-light right-align" type="submit" name="action">
                    Submit
                    <i class="material-icons right">send</i>
                </button>
            </div>
        </div>

    </form>
</div>

<script>
    function validatePassword() {
        var password1 = $("#password");
        var password2 = $("#password2");

        if (password1.val() !== password2.val()) {
            var errorMessage = "The passwords do not match";
            $("label[for='password']").attr("data-error", errorMessage);
            $("label[for='password2']").attr("data-error", errorMessage);
            password1.removeClass("valid");
            password1.addClass("invalid");
            password2.removeClass("valid");
            password2.addClass("invalid");
            return false;
        }
        //The password must contain a combination of letters and numbers
        if (/\d/.test(password1.val()) === false || /[a-z]/i.test(password1) === false) {
            var errorMessage2 = "The password must contain a combination of letters and numbers";
            $("label[for='password']").attr("data-error", errorMessage2);
            $("label[for='password2']").attr("data-error", errorMessage2);
            password1.addClass("invalid");
            password2.addClass("invalid");
            password1.removeClass("valid");
            password2.removeClass("valid");
            return false;
        }
        //Length must be at least 8
        if (password1.val().length < 8) {
            var errorMessage3 = "The password must be at least 8 characters long";
            $("label[for='password']").attr("data-error", errorMessage3);
            $("label[for='password2']").attr("data-error", errorMessage3);
            password1.addClass("invalid");
            password2.addClass("invalid");
            password1.removeClass("valid");
            password2.removeClass("valid");
            return false;
        }
        //must contain at least one uppercase char
        if (/[A-Z]+/.test(password1.val()) === false) {
            var errorMessage4 = "The password must contain an uppercase letter";
            $("label[for='password']").attr("data-error", errorMessage4);
            $("label[for='password2']").attr("data-error", errorMessage4);
            password1.addClass("invalid");
            password2.addClass("invalid");
            password1.removeClass("valid");
            password2.removeClass("valid");
            return false;
        }
        
        password1.addClass("valid");
        password2.addClass("valid");
        password1.removeClass("invalid");
        password2.removeClass("invalid");
        
        return true;
    }
    
    function redirect() {
        window.location.replace("/");
    }
    function handlePasswordChangeSubmission(response) {
        if (response === true) {
            Materialize.toast("Password successfully modified!", 3000);
            Materialize.toast("You will be redirected back to the home page shortly", 3000);
            setTimeout(redirect, 3000);
            
        } else {
            Materialize.toast("Password could not be changed", 4000);
        }

    }

    $("#password_change_form").submit(function (e) {

        var form = $(this);
        var url = form.attr('action');

        if (!validatePassword()) {
            return false;
        }
        else {
            $.ajax({
                type: "POST",
                url: url,
                data: form.serialize(), // serializes the form's elements.
                success: function (data) {
                    handlePasswordChangeSubmission(data);
                }
            });

        }
        e.preventDefault(); // avoid to execute the actual submit of the form.
    });
</script>